/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Patient;

import java.awt.CardLayout;
import javax.swing.JPanel;
import Models.City;
import Models.Community;

/**
 *
 * @author chait
 */
public class LocationPanel extends javax.swing.JPanel {

    /**
     * Creates new form Doctors
     */
    JPanel bottomPanel;
    Models.System rootDataObj;

    public LocationPanel(JPanel bottomPanel, Models.System rootDataObj) {
        initComponents();
        this.rootDataObj = rootDataObj;
        this.bottomPanel = bottomPanel;
        populateCityValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cityDropDown = new javax.swing.JComboBox<>();
        communityDropDown = new javax.swing.JComboBox<>();
        submitButton = new javax.swing.JButton();
        goBackToPatientPanel = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELECT LOCATION ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CHOOSE CITY");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CHOOSE COMMUNITY");

        cityDropDown.setToolTipText("SELECT CITY");
        cityDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityDropDownActionPerformed(evt);
            }
        });

        communityDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityDropDownActionPerformed(evt);
            }
        });

        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        goBackToPatientPanel.setText("GO BACK");
        goBackToPatientPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackToPatientPanelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(goBackToPatientPanel)
                .addGap(169, 169, 169)
                .addComponent(jLabel1)
                .addContainerGap(203, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cityDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(communityDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)))
                .addGap(148, 148, 148))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goBackToPatientPanel)
                    .addComponent(jLabel1))
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(cityDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(communityDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(354, Short.MAX_VALUE))
        );

        cityDropDown.getAccessibleContext().setAccessibleName("SLECT CITY");
    }// </editor-fold>//GEN-END:initComponents

        private void populateCityValues() {
        for(City cityObj: rootDataObj.getListOfCities()){
            cityDropDown.addItem(cityObj.getCityName());
        }
    }
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        City selectedCity = rootDataObj.getListOfCities().get(cityDropDown.getSelectedIndex());
        Community selectedCommunity = selectedCity.getCommunityDirectory().get(communityDropDown.getSelectedIndex());

        AppointmentPanel appointmentPanel = new AppointmentPanel(bottomPanel, rootDataObj, selectedCity, selectedCommunity);
        bottomPanel.add(appointmentPanel);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_submitButtonActionPerformed

    private void goBackToPatientPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackToPatientPanelActionPerformed
        // TODO add your handling code here:

        AppointmentSelectionPanel appointmentSelectionPanel = new AppointmentSelectionPanel(bottomPanel, rootDataObj);
        bottomPanel.add(appointmentSelectionPanel);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_goBackToPatientPanelActionPerformed

    private void communityDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_communityDropDownActionPerformed

    private void cityDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityDropDownActionPerformed
        // TODO add your handling code here:
        City selectedCity = rootDataObj.getListOfCities().get(cityDropDown.getSelectedIndex());
        communityDropDown.removeAllItems();
        for(Community comObj: selectedCity.getCommunityDirectory()){
            communityDropDown.addItem(comObj.getCommunityName());
        }
        communityDropDown.setSelectedItem(null);
    }//GEN-LAST:event_cityDropDownActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cityDropDown;
    private javax.swing.JComboBox<String> communityDropDown;
    private javax.swing.JButton goBackToPatientPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
