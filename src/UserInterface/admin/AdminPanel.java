/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.admin;

import javax.swing.JPanel;

import Models.AdminLoginCreds;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author yihan
 */
public class AdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form adminScreen
     */
    JPanel bottomPanel;
    public AdminPanel(JPanel bottomPanel) {
        initComponents();
        this.bottomPanel = bottomPanel;
        clearAllFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        adminID = new javax.swing.JLabel();
        userIdField = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        adminTypeDropDown = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("SYSTEM ADMIN");

        adminID.setText("User ID");

        userIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdFieldActionPerformed(evt);
            }
        });

        loginBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        loginBtn.setText("LOGIN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Password");

        jLabel3.setText("Select Admin Type");

        adminTypeDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PATIENT", "DOCTOR", "HOSPITAL", "COMMUNITY" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(adminID)
                            .addComponent(jLabel3))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adminTypeDropDown, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminID)
                    .addComponent(userIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(adminTypeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(loginBtn)
                .addContainerGap(323, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIdFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        
        try{
            AdminLoginCreds adminLoginCreds = new AdminLoginCreds();
            adminLoginCreds.addCreds();

            char [] passwordChars = passwordField.getPassword();
            String password = new String(passwordChars);


            if (adminLoginCreds.authenticate(userIdField.getText(), password)){
                
                
//                AdminTypePanel adminTypePanel = new AdminTypePanel(bottomPanel);
//                bottomPanel.add(adminTypePanel);
//                CardLayout layout = (CardLayout) bottomPanel.getLayout();
//                layout.next(bottomPanel);
                
                switch(adminTypeDropDown.getSelectedItem().toString()){
                
                    case "PATIENT" -> {

                        PatientOptionPanel patientOptionPanel = new PatientOptionPanel(bottomPanel);
                        bottomPanel.add(patientOptionPanel);
                        CardLayout layout = (CardLayout) bottomPanel.getLayout();
                        layout.next(bottomPanel);

                    }

                    case "DOCTOR" -> {

                        DoctorOptionPanel doctorOptionPanel = new DoctorOptionPanel(bottomPanel);
                        bottomPanel.add(doctorOptionPanel);
                        CardLayout layout = (CardLayout) bottomPanel.getLayout();
                        layout.next(bottomPanel);
                    }
                    
                    case "HOSPITAL" -> {
                        
                        
                        HospitalOptionPanel hospitalOptionPanel = new HospitalOptionPanel(bottomPanel);
                        bottomPanel.add(hospitalOptionPanel);
                        CardLayout layout = (CardLayout) bottomPanel.getLayout();
                        layout.next(bottomPanel);
                        
                    }
                    
                    case "COMMUNITY" -> {
                        
                        CommunityOptionPanel communityOptionPanel = new CommunityOptionPanel(bottomPanel);
                        bottomPanel.add(communityOptionPanel);
                        CardLayout layout = (CardLayout) bottomPanel.getLayout();
                        layout.next(bottomPanel);
                        
                    }
                    
                    default -> {
                        
                        throw new IllegalArgumentException("please select correct Admin Type");
                    }
                 
         
            }

            }

            else{
                throw new IllegalArgumentException("Please provide valid credentials");
 
            }
        }
        
        catch(IllegalArgumentException e){
            
            JOptionPane.showMessageDialog(this, e.getMessage(),"Admin Access Error",JOptionPane.ERROR_MESSAGE);
            
        }
       
        
        
    }//GEN-LAST:event_loginBtnActionPerformed
    private void clearAllFields(){
        
        userIdField.setText("");
        passwordField.setText("");
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminID;
    private javax.swing.JComboBox<String> adminTypeDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userIdField;
    // End of variables declaration//GEN-END:variables
}
