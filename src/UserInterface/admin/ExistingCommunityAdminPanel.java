/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.admin;

import Models.City;
import Models.Community;
import Models.Person;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chait
 */
public class ExistingCommunityAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityAdminPanel
     */
    JPanel bottomPanel;
    public ExistingCommunityAdminPanel(JPanel bottomPanel){
        initComponents();
        this.bottomPanel = bottomPanel;
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        communityTable = new javax.swing.JTable();
        viewCommunityButton = new javax.swing.JButton();
        deleteCommunityButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        updateCommunityButton = new javax.swing.JButton();
        communityNameTextField = new javax.swing.JTextField();
        cityNameTextField = new javax.swing.JTextField();
        postalCodeTextField = new javax.swing.JTextField();
        addCommunityButton = new javax.swing.JButton();
        goToSystemAdminButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PROVIDE COMMUNITY INFORMATION");

        communityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Commmunity Name", "City Name", "Postal Code"
            }
        ));
        communityTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                communityTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(communityTable);

        viewCommunityButton.setText("VIEW COMMUNITY DETAILS");
        viewCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCommunityButtonActionPerformed(evt);
            }
        });

        deleteCommunityButton.setText("DELETE COMMUNITY DETAILS");
        deleteCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCommunityButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Community Name");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("City Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Postal Code");

        updateCommunityButton.setText("UPDATE COMMUNITY DETAILS");
        updateCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCommunityButtonActionPerformed(evt);
            }
        });

        cityNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityNameTextFieldActionPerformed(evt);
            }
        });

        postalCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postalCodeTextFieldActionPerformed(evt);
            }
        });

        addCommunityButton.setText("ADD COMMUNITY DETAILS");
        addCommunityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommunityButtonActionPerformed(evt);
            }
        });

        goToSystemAdminButton.setText("GO BACK");
        goToSystemAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToSystemAdminButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(goToSystemAdminButton)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(postalCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(communityNameTextField)
                                .addComponent(cityNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(addCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewCommunityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateCommunityButton, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                            .addComponent(deleteCommunityButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(593, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(goToSystemAdminButton))
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(communityNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cityNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(postalCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(addCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(viewCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteCommunityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCommunityButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            int selectedRowIndex = communityTable.getSelectedRow();
            if(selectedRowIndex < 0 ){

                throw new IllegalArgumentException("Select any one community details to delete");
                
            }
            else{
                DefaultTableModel model = (DefaultTableModel) communityTable.getModel();
                
                model.removeRow(selectedRowIndex);
                
                communityNameTextField.setText("");
                cityNameTextField.setText("");
                postalCodeTextField.setText("");
             
            }
           
            
        }
        catch (IllegalArgumentException e){
            
            JOptionPane.showMessageDialog(this, e.getMessage(),"Selection Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_deleteCommunityButtonActionPerformed

    private void viewCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCommunityButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int selectedRowIndex = communityTable.getSelectedRow();
            if (selectedRowIndex<0){
                throw new IllegalArgumentException("Select any one community to view");
            }
            
            else{
                
                
                ViewCommunityDetails viewCommunityDetails = new ViewCommunityDetails(communityTable,bottomPanel);
                bottomPanel.add(viewCommunityDetails);
                CardLayout layout = (CardLayout) bottomPanel.getLayout();
                layout.next(bottomPanel);
                
            }
        }
        
        catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_viewCommunityButtonActionPerformed

    
    private void updateCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCommunityButtonActionPerformed
        // TODO add your handling code here:
        try{
            
            int selectedRowIndex = communityTable.getSelectedRow();
            if (selectedRowIndex<0){
                throw new IllegalArgumentException("Select any one community to update");
            }
            
            else{
                
                DefaultTableModel model = (DefaultTableModel) communityTable.getModel();
                model.setValueAt(communityNameTextField.getText(),communityTable.getSelectedRow(),0);
                model.setValueAt(cityNameTextField.getText(),communityTable.getSelectedRow(),1);
                model.setValueAt(postalCodeTextField.getText(),communityTable.getSelectedRow(),2);

                communityNameTextField.setText("");
                cityNameTextField.setText("");
                postalCodeTextField.setText("");

                JOptionPane.showMessageDialog(this, "Community Details Updated Successfully");
                
            }
        }
        
        catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
        
       
    }//GEN-LAST:event_updateCommunityButtonActionPerformed
                                                   
   

    private void communityTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_communityTableMouseClicked
        // TODO add your handling code here:
        
        try{
            int selectedRowIndex = communityTable.getSelectedRow();
            if(selectedRowIndex < 0 ){

                throw new IllegalArgumentException("Select any one community details");
                
            }
            else{
                DefaultTableModel model = (DefaultTableModel) communityTable.getModel();

                cityNameTextField.setText(model.getValueAt(selectedRowIndex, 1).toString());
                postalCodeTextField.setText(model.getValueAt(selectedRowIndex, 2).toString());
                communityNameTextField.setText(model.getValueAt(selectedRowIndex, 0).toString());
            }
           
            
        }
        catch (IllegalArgumentException e){
            
            JOptionPane.showMessageDialog(this, e.getMessage(),"Selection Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_communityTableMouseClicked

    private void addCommunityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommunityButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            if((communityNameTextField.getText() == null || communityNameTextField.getText().isEmpty()) ||
                    (cityNameTextField.getText() == null || cityNameTextField.getText().isEmpty()) || 
                    (postalCodeTextField.getText() == null || postalCodeTextField.getText().isEmpty())) {

                throw new IllegalArgumentException("PLEASE PROVIDE ALL COMMUNITY INFORMATION");

            }

            else{

                Person person = new Person();
                Community community = new Community();
                City city = new City("","");

                community.setCommunityName(communityNameTextField.getText());
                person.setCommunity(community);
                city.setCityName(cityNameTextField.getText());
                city.setPostalCode(postalCodeTextField.getText());
                person.setCity(city);

                populateCommunityDetails(person);

                communityNameTextField.setText("");
                cityNameTextField.setText("");
                postalCodeTextField.setText("");

                JOptionPane.showMessageDialog(this, "Community Details Added Successfully");

            }
        }
        
        catch (IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Form Error", JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_addCommunityButtonActionPerformed

    private void goToSystemAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToSystemAdminButtonActionPerformed
        // TODO add your handling code here:

        CommunityOptionPanel communityOptionPanel = new CommunityOptionPanel(bottomPanel);
        bottomPanel.add(communityOptionPanel);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_goToSystemAdminButtonActionPerformed

    private void postalCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postalCodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postalCodeTextFieldActionPerformed

    private void cityNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityNameTextFieldActionPerformed
    private void populateCommunityDetails(Person person){

        String data[] = {person.getCommunity().getCommunityName(),person.getCity().getCityName(),person.getCity().getPostalCode()};

        DefaultTableModel tblmodel = (DefaultTableModel) communityTable.getModel();

        tblmodel.addRow(data);
        
        
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCommunityButton;
    private javax.swing.JTextField cityNameTextField;
    private javax.swing.JTextField communityNameTextField;
    private javax.swing.JTable communityTable;
    private javax.swing.JButton deleteCommunityButton;
    private javax.swing.JButton goToSystemAdminButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField postalCodeTextField;
    private javax.swing.JButton updateCommunityButton;
    private javax.swing.JButton viewCommunityButton;
    // End of variables declaration//GEN-END:variables
}
