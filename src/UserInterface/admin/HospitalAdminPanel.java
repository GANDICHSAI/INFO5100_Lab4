/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.admin;

import Models.City;
import Models.Community;
import Models.Hospital;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yihan
 */
public class HospitalAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalModifyPanel
     */
    JPanel bottomPanel;
    public HospitalAdminPanel(JPanel bottomPanel) {
        initComponents();
        this.bottomPanel = bottomPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addHospitalLabel = new javax.swing.JLabel();
        hospitalNameLabel = new javax.swing.JLabel();
        communityLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        communityTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        hospitalNameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        addHospitalButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        goToSystemAdminButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        addHospitalLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addHospitalLabel.setForeground(new java.awt.Color(255, 255, 255));
        addHospitalLabel.setText("PROVIDE HOSPITAL INFORMATION");

        hospitalNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        hospitalNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        hospitalNameLabel.setText("Hospital Name");

        communityLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        communityLabel.setForeground(new java.awt.Color(255, 255, 255));
        communityLabel.setText("Community");

        cityLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cityLabel.setForeground(new java.awt.Color(255, 255, 255));
        cityLabel.setText("City");

        phoneLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(255, 255, 255));
        phoneLabel.setText("Phone No.");

        cityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextFieldActionPerformed(evt);
            }
        });

        phoneTextField.setPreferredSize(new java.awt.Dimension(100, 23));

        hospitalNameTextField.setPreferredSize(new java.awt.Dimension(100, 23));

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone No.", "City", "Comminity"
            }
        ));
        hospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hospitalTable);

        addHospitalButton.setText("ADD NEW HOSPITAL DETAILS");
        addHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospitalButtonActionPerformed(evt);
            }
        });

        viewButton.setText("VIEW HOSPITAL DETAILS");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE HOSPITAL DETAILS");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setText("UPDATE HOSPITAL DETAILS");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        goToSystemAdminButton.setText("GO BACK");
        goToSystemAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToSystemAdminButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(goToSystemAdminButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(hospitalNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(phoneLabel)
                                            .addComponent(hospitalNameLabel)
                                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(173, 173, 173)
                                        .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(communityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cityLabel)
                                        .addComponent(communityLabel)))
                                .addGap(70, 70, 70))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(211, 211, 211))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(206, 206, 206))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(addHospitalLabel)))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goToSystemAdminButton)
                    .addComponent(addHospitalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalNameLabel)
                    .addComponent(cityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hospitalNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(phoneLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(communityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(addHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospitalButtonActionPerformed
        // TODO add your handling code here:
        
        
        try{
            if((hospitalNameTextField.getText() == null || hospitalNameTextField.getText().isEmpty()) ||
                    (phoneTextField.getText() == null || phoneTextField.getText().isEmpty()) || 
                    (cityTextField.getText() == null || cityTextField.getText().isEmpty())||
                    (communityTextField.getText() == null || communityTextField.getText().isEmpty())) {

                throw new IllegalArgumentException("PLEASE PROVIDE ALL HOSPITAL INFORMATION");

            }

            else{

                Hospital hospital = new Hospital();
                Community community = new Community();
                City city =  new City("","");

                hospital.setHospitalName(hospitalNameTextField.getText());
                hospital.setPhoneNumber(Long.valueOf(phoneTextField.getText()));
                city.setCityName(cityTextField.getText());
                community.setCommunityName(communityTextField.getText());
                hospital.setCity(city);
                hospital.setCommunity(community);

                populateHospitalDetails(hospital);

                hospitalNameTextField.setText("");
                phoneTextField.setText("");
                cityTextField.setText("");
                communityTextField.setText("");


                JOptionPane.showMessageDialog(this, "Patient Details Added Successfully");
                
            }
    }//GEN-LAST:event_addHospitalButtonActionPerformed
      catch (IllegalArgumentException e){
          
          JOptionPane.showMessageDialog(this, e.getMessage(), "Form Error", JOptionPane.ERROR_MESSAGE);
      }
                
                }
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            
            int selectedRowIndex = hospitalTable.getSelectedRow();
            if (selectedRowIndex<0){
                throw new IllegalArgumentException("Select any one Hospital to view");
            }
            
            else{

                ViewHospitalDetails viewHospitalDetails = new ViewHospitalDetails(hospitalTable,bottomPanel);
                bottomPanel.add(viewHospitalDetails);
                CardLayout layout = (CardLayout) bottomPanel.getLayout();
                layout.next(bottomPanel);
                
            }
            
        }
        catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:

        try{
            int selectedRowIndex = hospitalTable.getSelectedRow();
            if(selectedRowIndex < 0 ){

                throw new IllegalArgumentException("Select any one hospital details to delete");

            }
            else{

                DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();

                model.removeRow(selectedRowIndex);

                hospitalNameTextField.setText("");
                phoneTextField.setText("");
                cityTextField.setText("");
                communityTextField.setText("");

            }

        }
        catch (IllegalArgumentException e){

            JOptionPane.showMessageDialog(this, e.getMessage(),"Selection Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
         try{
            
            int selectedRowIndex = hospitalTable.getSelectedRow();
            if (selectedRowIndex<0){
                throw new IllegalArgumentException("Select any one Hospital to update");
            }
            
            else{
                DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
                model.setValueAt(hospitalNameTextField.getText(),hospitalTable.getSelectedRow(),0);
                model.setValueAt(phoneTextField.getText(),hospitalTable.getSelectedRow(),1);
                model.setValueAt(cityTextField.getText(),hospitalTable.getSelectedRow(),2);
                model.setValueAt(communityTextField.getText(),hospitalTable.getSelectedRow(),3);


                hospitalNameTextField.setText("");
                phoneTextField.setText("");
                cityTextField.setText("");
                communityTextField.setText("");

                JOptionPane.showMessageDialog(this, "Hospital Details Updated Successfully");
                
            }
         }
         
         catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
         
    }//GEN-LAST:event_updateButtonActionPerformed

    private void goToSystemAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToSystemAdminButtonActionPerformed
        // TODO add your handling code here:

        HospitalOptionPanel hospitalOptionPanel = new HospitalOptionPanel(bottomPanel);
        bottomPanel.add(hospitalOptionPanel);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_goToSystemAdminButtonActionPerformed

    private void hospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalTableMouseClicked
        // TODO add your handling code here:
        
        try{
            int selectedRowIndex = hospitalTable.getSelectedRow();
            if(selectedRowIndex < 0 ){

                throw new IllegalArgumentException("Select any one hospital profile");
                
            }
            else{
                DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
                
                hospitalNameTextField.setText(model.getValueAt(selectedRowIndex, 0).toString());
                phoneTextField.setText(model.getValueAt(selectedRowIndex, 1).toString());
                cityTextField.setText(model.getValueAt(selectedRowIndex, 2).toString());
                communityTextField.setText(model.getValueAt(selectedRowIndex, 3).toString());

            }
           
            
        }
        catch (IllegalArgumentException e){
            
            JOptionPane.showMessageDialog(this, e.getMessage(),"Selection Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hospitalTableMouseClicked

    private void cityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextFieldActionPerformed

    private void populateHospitalDetails(Hospital hospital){
        
        
        String data[] = {hospital.getHospitalName(),hospital.getPhoneNumber().toString(),hospital.getCity().getCityName(),hospital.getCommunity().getCommunityName()};

        DefaultTableModel tblmodel = (DefaultTableModel) hospitalTable.getModel();

        tblmodel.addRow(data);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHospitalButton;
    private javax.swing.JLabel addHospitalLabel;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JLabel communityLabel;
    private javax.swing.JTextField communityTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton goToSystemAdminButton;
    private javax.swing.JLabel hospitalNameLabel;
    private javax.swing.JTextField hospitalNameTextField;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
