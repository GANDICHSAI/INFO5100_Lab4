/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.admin;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chait
 */
public class ViewDoctorDetails extends javax.swing.JPanel {

    /**
     * Creates new form ViewDoctorDetails
     */
    JTable doctorTable;
    JPanel bottomPanel;
    public ViewDoctorDetails(JTable doctorTable,JPanel bottomPanel) {
        initComponents();
        this.doctorTable = doctorTable;
        this.bottomPanel = bottomPanel;
        populateDoctorDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cityLabel = new javax.swing.JLabel();
        yearofExperienceLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        qualificationLabel = new javax.swing.JLabel();
        specialtyLabel = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        specialtyTextField = new javax.swing.JTextField();
        yearofExperienceTextField = new javax.swing.JTextField();
        qualificationTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        goBackButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        cityLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cityLabel.setForeground(new java.awt.Color(255, 255, 255));
        cityLabel.setText("City");

        yearofExperienceLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        yearofExperienceLabel.setForeground(new java.awt.Color(255, 255, 255));
        yearofExperienceLabel.setText("Years of Experience");

        firstNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        firstNameLabel.setText("First Name");

        qualificationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        qualificationLabel.setForeground(new java.awt.Color(255, 255, 255));
        qualificationLabel.setText("Qualifications");

        specialtyLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        specialtyLabel.setForeground(new java.awt.Color(255, 255, 255));
        specialtyLabel.setText("Specialty");

        cityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTextFieldActionPerformed(evt);
            }
        });

        lastNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        lastNameLabel.setText("LastName");

        firstNameTextField.setPreferredSize(new java.awt.Dimension(100, 23));
        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PHYSICIAN DETAILS");

        goBackButton.setText("Go Back");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(goBackButton)
                .addGap(135, 135, 135)
                .addComponent(jLabel1)
                .addGap(0, 233, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(qualificationTextField)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(qualificationLabel)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(yearofExperienceTextField)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yearofExperienceLabel)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(specialtyTextField)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(specialtyLabel)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cityLabel)
                                            .addComponent(lastNameTextField)
                                            .addComponent(firstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                            .addComponent(firstNameLabel)
                                            .addComponent(lastNameLabel)
                                            .addComponent(cityTextField, javax.swing.GroupLayout.Alignment.TRAILING))))))))
                .addGap(247, 247, 247))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goBackButton)
                    .addComponent(jLabel1))
                .addGap(43, 43, 43)
                .addComponent(firstNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lastNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(specialtyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialtyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(yearofExperienceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(yearofExperienceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(qualificationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qualificationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void populateDoctorDetails()
    {
        try{
            int selectedRowIndex = doctorTable.getSelectedRow();
            if(selectedRowIndex < 0 ){

                throw new IllegalArgumentException("Select any one doctor profile to view");
                
            }
            else{
                DefaultTableModel model = (DefaultTableModel) doctorTable.getModel();
                
                firstNameTextField.setText(model.getValueAt(selectedRowIndex, 0).toString());
                lastNameTextField.setText(model.getValueAt(selectedRowIndex, 1).toString());
                cityTextField.setText(model.getValueAt(selectedRowIndex, 2).toString());
                specialtyTextField.setText(model.getValueAt(selectedRowIndex, 3).toString());
                yearofExperienceTextField.setText(model.getValueAt(selectedRowIndex, 4).toString());
                qualificationTextField.setText(model.getValueAt(selectedRowIndex, 5).toString());

                firstNameTextField.setEditable(false);
                lastNameTextField.setEditable(false);
                cityTextField.setEditable(false);
                specialtyTextField.setEditable(false);
                yearofExperienceTextField.setEditable(false);
                qualificationTextField.setEditable(false);

            }
        
        }catch (IllegalArgumentException e){
             JOptionPane.showMessageDialog(this, e.getMessage(),"Selection Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTextFieldActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        // TODO add your handling code here:

        DoctorAdminPanel doctorAdminPanel = new DoctorAdminPanel(bottomPanel);
        bottomPanel.add(doctorAdminPanel);
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        layout.next(bottomPanel);
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel qualificationLabel;
    private javax.swing.JTextField qualificationTextField;
    private javax.swing.JLabel specialtyLabel;
    private javax.swing.JTextField specialtyTextField;
    private javax.swing.JLabel yearofExperienceLabel;
    private javax.swing.JTextField yearofExperienceTextField;
    // End of variables declaration//GEN-END:variables
}
